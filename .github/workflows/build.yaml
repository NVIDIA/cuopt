name: build

on:
  push:
    branches:
      - "branch-*"
    tags:
      - v[0-9][0-9].[0-9][0-9].[0-9][0-9]
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
      date:
        required: true
        type: string
      sha:
        required: true
        type: string
      build_type:
        type: string
        default: nightly

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cpp-build:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
  python-build:
    needs: [cpp-build]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      matrix_filter: map(select(.PY_VER != "3.13"))
  wheel-build-cuopt-mps-parser:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_cuopt_mps_parser.sh
      matrix_filter: map(select((.CUDA_VER | startswith("12")) and .PY_VER != "3.13"))
      package-type: python
      wheel-name: cuopt_mps_parser
      append-cuda-suffix: false
  wheel-build-libcuopt:
    needs: wheel-build-cuopt-mps-parser
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.06
    with:
      # build for every combination of arch and CUDA version, but only for the latest Python
      matrix_filter: group_by([.ARCH, (.CUDA_VER|split(".")|map(tonumber)|.[0])]) | map(max_by(.PY_VER|split(".")|map(tonumber)))
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_libcuopt.sh
      package-type: cpp
      wheel-name: libcuopt
  wheel-build-cuopt:
    needs: [wheel-build-cuopt-mps-parser, wheel-build-libcuopt]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_cuopt.sh
      package-type: python
      wheel-name: cuopt
      matrix_filter: map(select(.PY_VER != "3.13"))
  wheel-build-cuopt-server:
    needs: wheel-build-cuopt
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_cuopt_server.sh
      package-type: python
      wheel-name: cuopt_server
      matrix_filter: map(select(.PY_VER != "3.13"))
  #docs-build:
  #  if: inputs.build_type == 'nightly' || github.ref_type == 'branch'
  #  needs: [python-build]
  #  secrets: inherit
  #  uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-25.06
  #  with:
  #    build_type: ${{ inputs.build_type || 'branch' }}
  #    node_type: "gpu-l4-latest-1"
  #    sha: ${{ inputs.sha }}
  #    branch: ${{ inputs.branch }}
  #    date: ${{ inputs.date }}
  #    arch: amd64
  #    container_image: rapidsai/ci-conda:cuda11.8.0-ubuntu22.04-py3.10
  #    run_script: ci/build_docs.sh
  wheel-build-cuopt-sh-client:
    needs: wheel-build-cuopt
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.06
    with:
      build_type: ${{ inputs.build_type || 'branch' }}
      branch: ${{ inputs.branch }}
      sha: ${{ inputs.sha }}
      date: ${{ inputs.date }}
      script: ci/build_wheel_cuopt_sh_client.sh
      matrix_filter: map(select((.CUDA_VER | startswith("12")) and .PY_VER != "3.13"))
      package-type: python
      wheel-name: cuopt_sh_client
      append-cuda-suffix: false
  service-container:
    if: inputs.build_type == 'nightly'
    needs: [wheel-build-cuopt, wheel-build-cuopt-server]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 0 # unshallow fetch for setuptools-scm
          persist-credentials: false
      - name: build service
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh workflow run service_nightly.yaml \
            -f branch=${{ inputs.branch }} \
            -f sha=${{ inputs.sha }} \
            -f date=${{ inputs.date }} \
            -f build_type=${{ inputs.build_type }}
